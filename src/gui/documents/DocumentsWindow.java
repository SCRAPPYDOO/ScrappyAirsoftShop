/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.documents;

import gui.Window;
import java.awt.Component;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import sqlconnector.Sql;
import sqlconnector.SqlConnector;

/**
 *
 * @author User
 */
public class DocumentsWindow extends javax.swing.JInternalFrame implements Window {

    /**
     * Creates new form DocumentsWindow
     */
    public DocumentsWindow() {
        super("DOCUMENTS", true, true, true, true);
        initComponents();
        this.setVisible(true);
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addNewRecord = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        documentsTable = new javax.swing.JTable();
        yearBox = new javax.swing.JComboBox();
        month = new javax.swing.JComboBox();
        tableType = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();

        addNewRecord.setText("ADD NEW RECORD");
        addNewRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewRecordActionPerformed(evt);
            }
        });

        jButton2.setText("DELETE RECORD");

        documentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(documentsTable);

        yearBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2013", "2014", "2015" }));
        yearBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yearBoxItemStateChanged(evt);
            }
        });

        month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "STYCZEŃ", "LUTY", "MARZEC", "KWIECIEŃ", "MAJ", "CZERWIEC", "LIPIEC", "SIERPIEŃ" }));
        month.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                monthItemStateChanged(evt);
            }
        });

        tableType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "KPIR", "VAT_IN", "VAT_OUT" }));
        tableType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tableTypeItemStateChanged(evt);
            }
        });
        tableType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 151, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tableType, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(yearBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addNewRecord, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tableType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addNewRecord)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addNewRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewRecordActionPerformed
        NewDocumentFrame frame = new NewDocumentFrame(this);
        frame.setBounds(0,0, this.getWidth(), this.getHeight());
        this.getContentPane().add(frame, 0);
        this.setWindowState(false);
        this.getContentPane().repaint();
    }//GEN-LAST:event_addNewRecordActionPerformed

    private void tableTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableTypeActionPerformed

    private void tableTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tableTypeItemStateChanged
        refreshTable();
    }//GEN-LAST:event_tableTypeItemStateChanged

    private void yearBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yearBoxItemStateChanged
        refreshTable();
    }//GEN-LAST:event_yearBoxItemStateChanged

    private void monthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_monthItemStateChanged
        refreshTable();
    }//GEN-LAST:event_monthItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewRecord;
    private javax.swing.JTable documentsTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox month;
    private javax.swing.JComboBox tableType;
    private javax.swing.JComboBox yearBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setWindowState(boolean enabled) {
        for(Component comp : this.getContentPane().getComponents()) {
            comp.setEnabled(enabled);
        }
        
        jScrollPane1.setWheelScrollingEnabled(enabled);
        jScrollPane1.getHorizontalScrollBar().setEnabled(enabled);
        documentsTable.setEnabled(enabled);
    }

    @Override
    public void setResult() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setResult(Object singleResult) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setResult(Map<Object, String> resultMap) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void doAction(String action) {
        switch(action) {
            case "REFRESH_TABLE": this.refreshTable(); break;
            default: break;
        }
    }

    private void refreshTable() {
        DefaultTableModel model = new DefaultTableModel(null, DocumentsStruct.getValuesAsString());
        
        String date = yearBox.getSelectedItem().toString();        
        date += "-";
        if(month.getSelectedIndex() + 1 < 10) {
            date += "0";
        }
        date += (month.getSelectedIndex() + 1);

        String select = Sql.getSelectQuery(DocumentsStruct.getTableName(), DocumentsStruct.values(), Sql.getWhereMap(DocumentsStruct.DOCUMENT_DATE.toString(), date+ "%", "LIKE", "AND"));
        SqlConnector.doSelectQuery(select, DocumentsStruct.values(), model);
        
        DefaultTableModel viewModel;
        
        //"KPIR", "VAT_IN", "VAT_OUT" 
            switch(tableType.getSelectedItem().toString()) {
                case "KPIR": {
                    String[] columnList = DocumentsStruct.getViewStruct("KPIR");
                    viewModel = new DefaultTableModel(null, columnList);
                    Object[] record = new Object[columnList.length];

                    for(int i=0; i<model.getRowCount(); i++) {
                        //LP
                        record[0] = i;
                        //DATA SPRZEDAZY
                        for(int y=1; y<columnList.length; y++) {
                            record[y] = model.getValueAt(i, model.findColumn(columnList[y-1]));
                        } 
                        viewModel.addRow(record);
                    }    
                    break;
                }
                case "VAT_IN":
                case "VAT_OUT":
                default: break;

        }
 
        documentsTable.setModel(model);
        
 
    }

}
